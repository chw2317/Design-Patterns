====================	单例模式	====================

1.应用场景：
	当需要保证类在内存中的对象唯一性，可以使用单例模式；
	不想创建多个实例浪费资源，或者避免多个实例由于多次调用而出现错误；
	一般写工具类，线程池，缓存，数据库等可以用到。


2.设计思想：（保证对象的唯一性的三个步骤）
			想法								实现
	不允许其他程序用new对象					私有化该类的构造函数
	在该类中创建对象							通过new在本类中创建一个本类对象
	对外提供一个可以让其他程序获取该对象的方法		定义一个公有的方法，将在该类中所创建的对象返回


3.优缺点：
	优点：保持类对象唯一性，对于频繁创建和销毁的对象可以提高性能。
	缺点：扩展困难，单例的方法无法生成子类对象，要扩展的话基本要重写这个类。
	

4.注意事项：
	在Android中如果单例对象持有Context，那么很容易引发内存泄露。
	此时需要注意传递给单例对象的Context最好是Application Context
